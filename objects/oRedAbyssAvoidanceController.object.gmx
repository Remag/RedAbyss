<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MusicStartStep = 0;
Step = 0;
RealStep = 0;
Duration = 0;

MusicId = 0;

if( global.debugMode ) {
    if( !instance_exists( oRedDebugInfo ) ) {
        instance_create( 0, 0, oRedDebugInfo );
    }
    Step = oRedDebugInfo.StartStep;
    if( Step &gt; MusicStartStep ) {
        // Start the music.
        MusicId = audio_play_sound( musRedLunarAbyss, 0, false );
        Duration = audio_sound_length( MusicId ) * 50;   
    }
}

// Data structures for projectile operations.
FadeIdList = ds_list_create();
FadeValueList = ds_list_create();
FadeDeltaList = ds_list_create();

DeactivatedIdList = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user( 0 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intro
var t = Step;
if( t == 8 || t == 73 || t == 94 || t == 160 || t == 182 || t == 247 ) {
    repeat( 2 ) {
        var spawnX = random_range( 64, 800 - 64 );
        var spawnY = 150;
        scrRedMakeCircle( spawnX, spawnY, random( 360 ), 35, oRedS1Bullet );
    }
}
if( t == 269 ) {
    var spawnX = random_range( 64, 800 - 64 );
    var spawnY = 150;
    scrRedMakeCircle( spawnX, spawnY, random( 360 ), 32, oRedS1LCurvedBullet );
    
    spawnX = random_range( 64, 800 - 64 );
    spawnY = 150;
    scrRedMakeCircle( spawnX, spawnY, random( 360 ), 32, oRedS1RCurvedBullet );
}

if( t == 355 ) {
    //scrRedBulletFadeOut( oRedS1Bullet, 0.05 );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Projectile manipulation

// Fade out operations.
var fadeCount = ds_list_size( FadeIdList );
for( var i = fadeCount - 1; i &gt;= 0; i-- ) {
    var targetId = FadeIdList[|i];
    var targetValue = FadeValueList[|i];
    var targetDelta = FadeDeltaList[|i];
    var newFadeValue = targetValue - targetDelta;
    if( newFadeValue &lt;= 0 ) {
        with( targetId ) {
            instance_destroy();
        }
        ds_list_delete( FadeIdList, i );
        ds_list_delete( FadeValueList, i );
        ds_list_delete( FadeDeltaList, i );
    } else {
        with( targetId ) {
            image_alpha = newFadeValue;
        }
        ds_list_replace( FadeValueList, i, newFadeValue );
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Advance &amp; Music Sync

if( Step == MusicStartStep ) {
    // Start the music.
    MusicId = audio_play_sound( musRedLunarAbyss, 0, false );
    Duration = audio_sound_length( MusicId ) * 50;    
} else if( Step &gt; MusicStartStep ) {
    // Stop the music if necessary.
    if( !instance_exists( objPlayer ) || ( Step - MusicStartStep ) &gt;= Duration ) {
        audio_stop_sound( MusicId );
        exit;
    }
    
    // Correct the game time if it desyncs from real time.
    var deltaStep = RealStep - Step;
    if( abs( deltaStep ) &gt; 5 ) {
        // A big lag spike, adjust music to game time.
       audio_sound_set_track_position( MusicId, ( Step - MusicStartStep ) / 50 );
       //show_debug_message( "Music sync" );
       RealStep = Step;
    }
}

Step++;
RealStep += 50 * delta_time / 1000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
audio_stop_sound( MusicId );
ds_list_destroy( FadeIdList );
ds_list_destroy( FadeValueList );
ds_list_destroy( FadeDeltaList );
ds_list_destroy( DeactivatedIdList );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user( 0 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user( 0 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( global.debugMode ) {
    var panelX = 635;
    var panelY = 24;
    var lineHeight = 16;
    
    draw_set_font( fDefault12 );
    draw_set_halign( fa_left );
    draw_set_valign( fa_top );
    scrDrawTextOutline( panelX, panelY, "Frame: " + string( Step ), c_white, c_black );
    var secondsCount = floor( Step / 50 mod 60 );
    var secondsStr;
    if( secondsCount &lt; 10 ) {
        secondsStr = '0' + string( secondsCount );
    } else {
        secondsStr = string( secondsCount );
    }
    scrDrawTextOutline( panelX, panelY + lineHeight, "Time: " + string( floor( Step / 50 / 60 ) ) + ":" + string( secondsStr ), c_white, c_black );
    scrDrawTextOutline( panelX, panelY + 2 * lineHeight, "Count: " + string( instance_count ), c_white, c_black );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
